name: Cache Warmup

on:
  schedule:
    # Warm up caches daily at 01:00 UTC
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  warmup-docker-cache:
    name: Warmup Docker Build Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Warmup AI Proxy image cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ai-proxy:cache-warmup
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Warmup UI image cache
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          file: ./ui/Dockerfile
          push: false
          tags: logs-ui-web:cache-warmup
          cache-from: type=gha,key=ui
          cache-to: type=gha,mode=max,key=ui

  warmup-python-cache:
    name: Warmup Python Dependencies Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --with dev

  warmup-node-cache:
    name: Warmup Node Dependencies Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Playwright Node modules
        uses: actions/cache@v4
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-node-playwright-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-playwright-

      - name: Install Node dependencies
        run: |
          docker run --rm \
            -v $PWD/ui:/app \
            -w /app \
            node:20 \
            npm ci --no-audit --fund=false --loglevel=error
